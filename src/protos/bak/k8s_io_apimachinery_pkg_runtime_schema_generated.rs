// This file is generated by rust-protobuf 2.27.1. Do not edit
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![cfg_attr(rustfmt, rustfmt::skip)]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `k8s.io_apimachinery_pkg_runtime_schema_generated.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
// const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_27_1;

static file_descriptor_proto_data: &'static [u8] = b"\
    \n6k8s.io_apimachinery_pkg_runtime_schema_generated.proto\x12&k8s.io.api\
    machinery.pkg.runtime.schemaB\x08Z\x06schemaJ\x9f\x06\n\x06\x12\x04\x13\
    \0\x18\x1d\n\x82\x05\n\x01\x0c\x12\x03\x13\0\x122\xac\x04\nCopyright\x20\
    The\x20Kubernetes\x20Authors.\n\nLicensed\x20under\x20the\x20Apache\x20L\
    icense,\x20Version\x202.0\x20(the\x20\"License\");\nyou\x20may\x20not\
    \x20use\x20this\x20file\x20except\x20in\x20compliance\x20with\x20the\x20\
    License.\nYou\x20may\x20obtain\x20a\x20copy\x20of\x20the\x20License\x20a\
    t\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless\x20required\
    \x20by\x20applicable\x20law\x20or\x20agreed\x20to\x20in\x20writing,\x20s\
    oftware\ndistributed\x20under\x20the\x20License\x20is\x20distributed\x20\
    on\x20an\x20\"AS\x20IS\"\x20BASIS,\nWITHOUT\x20WARRANTIES\x20OR\x20CONDI\
    TIONS\x20OF\x20ANY\x20KIND,\x20either\x20express\x20or\x20implied.\nSee\
    \x20the\x20License\x20for\x20the\x20specific\x20language\x20governing\
    \x20permissions\x20and\nlimitations\x20under\x20the\x20License.\n2I\x20T\
    his\x20file\x20was\x20autogenerated\x20by\x20go-to-protobuf.\x20Do\x20no\
    t\x20edit\x20it\x20manually!\n\n\x08\n\x01\x02\x12\x03\x15\x08.\n\x08\n\
    \x01\x08\x12\x03\x18\0\x1d\nA\n\x04\x08\xe7\x07\0\x12\x03\x18\0\x1d\x1a4\
    \x20Package-wide\x20variables\x20from\x20generator\x20\"generated\".\n\n\
    \x0c\n\x05\x08\xe7\x07\0\x02\x12\x03\x18\x07\x11\n\r\n\x06\x08\xe7\x07\0\
    \x02\0\x12\x03\x18\x07\x11\n\x0e\n\x07\x08\xe7\x07\0\x02\0\x01\x12\x03\
    \x18\x07\x11\n\x0c\n\x05\x08\xe7\x07\0\x07\x12\x03\x18\x14\x1c\
";

static file_descriptor_proto_lazy: ::protobuf::rt::LazyV2<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::LazyV2::INIT;

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    file_descriptor_proto_lazy.get(|| {
        parse_descriptor_proto()
    })
}
